<?php
/**
 * Web wrapper for WhyML Generated PHP Component
 * This file instantiates and renders the PHP component for web display
 */

// Include the generated component
require_once 'index.php';

use App\Components\ExampleDomainComponent;

// Set headers to allow iframe embedding
header('X-Frame-Options: ALLOWALL');
header('Content-Security-Policy: frame-ancestors *');
header('Content-Type: text/html; charset=UTF-8');
?><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PHP 8.2 Implementation - WhyML</title>
    <style>
        body {
            margin: 0;
            padding: 20px;
            font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
            background-color: #f0f0f2;
        }
        
        .wrapper {
            max-width: 1000px;
            margin: 0 auto;
        }
        
        .info-header {
            background: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .info-header h1 {
            margin: 0 0 10px 0;
            color: #8e44ad;
        }
        
        .info-header p {
            margin: 5px 0;
            color: #666;
        }
        
        .php-version {
            background: #8e44ad;
            color: white;
            padding: 4px 12px;
            border-radius: 4px;
            font-size: 14px;
            display: inline-block;
            margin-top: 10px;
        }
        
        .rendered-content {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .component-styles {
            background: #f8f9fa;
            padding: 20px;
            border-top: 1px solid #dee2e6;
        }
        
        .component-styles h3 {
            margin: 0 0 15px 0;
            color: #495057;
        }
        
        .component-styles pre {
            background: #e9ecef;
            padding: 15px;
            border-radius: 4px;
            overflow-x: auto;
            font-size: 12px;
            margin: 0;
        }
        
        <?php
        // Output the component styles
        try {
            $component = new ExampleDomainComponent();
            echo $component->getStyles();
        } catch (Exception $e) {
            echo "/* Error loading component styles: " . htmlspecialchars($e->getMessage()) . " */";
        }
        ?>
    </style>
</head>
<body>
    <div class="wrapper">
        <div class="info-header">
            <h1>üêò PHP 8.2 Implementation</h1>
            <p><strong>Generated by WhyML</strong> - PHP Class-based Component</p>
            <p>This demonstrates how WhyML converts HTML content into a structured PHP class with proper encapsulation and rendering methods.</p>
            <div class="php-version">PHP <?= PHP_VERSION ?></div>
        </div>
        
        <div class="rendered-content">
            <?php
            try {
                // Instantiate and render the component
                $component = new ExampleDomainComponent([
                    'title' => 'Example Domain',
                    'description' => 'This domain is for use in illustrative examples in documents.'
                ]);
                
                echo $component->render();
                
            } catch (Exception $e) {
                echo '<div style="padding: 20px; color: #dc3545; background: #f8d7da; border: 1px solid #f5c6cb; border-radius: 4px;">';
                echo '<strong>Error:</strong> ' . htmlspecialchars($e->getMessage());
                echo '</div>';
            }
            ?>
            
            <div class="component-styles">
                <h3>Generated Component Information</h3>
                <p><strong>Class:</strong> App\Components\ExampleDomainComponent</p>
                <p><strong>Methods:</strong> render(), getStyles(), setData(), getData()</p>
                <p><strong>Features:</strong> HTML escaping, attribute building, CSS generation</p>
                
                <h4>Generated CSS Styles:</h4>
                <pre><?php
                try {
                    $component = new ExampleDomainComponent();
                    echo htmlspecialchars($component->getStyles());
                } catch (Exception $e) {
                    echo "Error loading styles: " . htmlspecialchars($e->getMessage());
                }
                ?></pre>
            </div>
        </div>
    </div>
</body>
</html>
