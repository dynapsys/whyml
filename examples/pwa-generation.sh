#!/bin/bash
# WhyML PWA Generation Examples
# Demonstrates Progressive Web App generation from WhyML manifests

echo "📱 WhyML PWA Generation Examples"
echo "================================"

# Create a PWA-optimized manifest
echo "1. Creating PWA-optimized manifest..."
cat > pwa-manifest.yaml << EOF
metadata:
  title: "WhyML PWA Demo"
  short_name: "PWA Demo"
  description: "A Progressive Web App generated by WhyML"
  version: "1.0.0"
  author: "WhyML Developer"
  theme_color: "#2196f3"
  background_color: "#ffffff"
  start_url: "/"
  display: "standalone"
  orientation: "portrait-primary"

template_vars:
  app_name: "PWA Demo"
  primary_color: "#2196f3"
  secondary_color: "#ff9800"
  brand_logo: "/assets/logo.svg"

styles:
  body:
    margin: "0"
    font-family: "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif"
    background: "{{ background_color }}"
  
  header:
    background: "{{ primary_color }}"
    color: "white"
    padding: "1rem"
    box-shadow: "0 2px 4px rgba(0,0,0,0.1)"
  
  main:
    padding: "2rem"
    max-width: "600px"
    margin: "0 auto"
  
  button:
    background: "{{ primary_color }}"
    color: "white"
    border: "none"
    padding: "0.75rem 1.5rem"
    border-radius: "8px"
    cursor: "pointer"
    font-size: "1rem"
    margin: "0.5rem"
  
  card:
    background: "white"
    border-radius: "12px"
    padding: "1.5rem"
    margin: "1rem 0"
    box-shadow: "0 2px 8px rgba(0,0,0,0.1)"

interactions:
  installApp: "showInstallPrompt"
  shareApp: "navigator.share"
  goOffline: "showOfflineContent"
  syncData: "backgroundSync"

structure:
  div:
    class: "app"
    children:
      - header:
          class: "header"
          children:
            - h1:
                text: "{{ app_name }}"
            - button:
                onclick: "installApp"
                text: "Install App"
      - main:
          class: "main"
          children:
            - div:
                class: "card"
                children:
                  - h2:
                      text: "Welcome to PWA Demo"
                  - p:
                      text: "This is a Progressive Web App built with WhyML"
                  - button:
                      onclick: "shareApp"
                      text: "Share App"
            - div:
                class: "card"
                children:
                  - h3:
                      text: "Features"
                  - ul:
                      children:
                        - li:
                            text: "Works offline"
                        - li:
                            text: "Installable"
                        - li:
                            text: "Push notifications"
                        - li:
                            text: "Background sync"
            - div:
                class: "card"
                children:
                  - h3:
                      text: "Actions"
                  - button:
                      onclick: "goOffline"
                      text: "Test Offline"
                  - button:
                      onclick: "syncData"
                      text: "Sync Data"
EOF

echo "✅ PWA manifest created: pwa-manifest.yaml"
echo ""

# Generate PWA using convert command
echo "2. Converting manifest to PWA format:"
whyml convert --from pwa-manifest.yaml --to pwa-app.html -as pwa
echo "✅ PWA HTML generated: pwa-app.html"
echo ""

# Generate complete PWA artifact
echo "3. Generating complete PWA artifact with all files:"
whyml generate pwa -f pwa-manifest.yaml -o ./pwa-complete
echo "✅ Complete PWA generated in: ./pwa-complete/"
echo ""

# List generated PWA files
echo "4. PWA files generated:"
if [ -d "./pwa-complete" ]; then
    find ./pwa-complete -type f | sort
    echo ""
    
    echo "Preview of generated files:"
    echo ""
    
    if [ -f "./pwa-complete/manifest.json" ]; then
        echo "📄 Web App Manifest (manifest.json):"
        head -15 ./pwa-complete/manifest.json
        echo ""
    fi
    
    if [ -f "./pwa-complete/sw.js" ]; then
        echo "⚙️  Service Worker (sw.js) - first 10 lines:"
        head -10 ./pwa-complete/sw.js
        echo ""
    fi
else
    echo "ℹ️  PWA files would be generated in ./pwa-complete/ directory"
    echo "   - index.html (Main PWA application)"
    echo "   - manifest.json (Web App Manifest)"
    echo "   - sw.js (Service Worker)"
    echo "   - offline.html (Offline fallback page)"
fi

# PWA testing and deployment
echo "5. PWA Testing and Deployment:"
echo ""

echo "   Local testing:"
echo "   whyml run -f pwa-manifest.yaml --port 8080"
echo "   Then open: http://localhost:8080"
echo ""

echo "   Production deployment with HTTPS (required for PWA):"
echo "   whyml run -f pwa-manifest.yaml --port 443 --host yourdomain.com --tls-provider letsencrypt --caddy-config Caddyfile.json"
echo ""

# PWA Configuration Options
echo "6. PWA Configuration Options:"
cat > pwa-config.json << EOF
{
  "name": "Advanced PWA Demo",
  "short_name": "AdvPWA",
  "description": "Advanced PWA with custom configuration",
  "theme_color": "#673ab7",
  "background_color": "#f3e5f5",
  "display": "standalone",
  "orientation": "any",
  "categories": ["productivity", "utilities"],
  "screenshots": [
    {
      "src": "/screenshots/desktop.png",
      "sizes": "1280x720",
      "type": "image/png",
      "platform": "wide"
    },
    {
      "src": "/screenshots/mobile.png", 
      "sizes": "750x1334",
      "type": "image/png"
    }
  ],
  "shortcuts": [
    {
      "name": "New Document",
      "short_name": "New",
      "description": "Create a new document",
      "url": "/new",
      "icons": [{"src": "/icons/new.png", "sizes": "96x96"}]
    }
  ],
  "cache_strategy": "cache_first",
  "offline_pages": ["/", "/about", "/help"],
  "push_notifications": true,
  "background_sync": true
}
EOF

echo "✅ Advanced PWA configuration created: pwa-config.json"
echo ""

echo "   Generate PWA with custom config:"
echo "   whyml generate pwa -f pwa-manifest.yaml --config pwa-config.json -o ./pwa-advanced"
echo ""

# PWA Features
echo "7. PWA Features Included:"
echo ""
echo "   🔧 Service Worker:"
echo "      - Caches app shell and content"
echo "      - Provides offline functionality"
echo "      - Background sync capabilities"
echo ""
echo "   📱 Web App Manifest:"
echo "      - App metadata and branding"
echo "      - Install prompts and behavior"
echo "      - Splash screen configuration"
echo ""
echo "   💾 Offline Support:"
echo "      - Offline fallback pages"
echo "      - Cached content delivery"
echo "      - Background data sync"
echo ""
echo "   🚀 Installation:"
echo "      - Add to home screen"
echo "      - Install prompts"
echo "      - App-like experience"
echo ""

# PWA Best Practices
echo "8. PWA Best Practices & Testing:"
echo ""
echo "   📊 Testing Tools:"
echo "   - Chrome DevTools > Application tab"
echo "   - Lighthouse PWA audit"
echo "   - PWA Builder validation"
echo ""
echo "   ✅ PWA Checklist:"
echo "   - HTTPS deployment ✓"
echo "   - Web App Manifest ✓"
echo "   - Service Worker ✓"
echo "   - Offline functionality ✓"
echo "   - Responsive design ✓"
echo "   - Fast loading ✓"
echo ""

# Deployment examples
echo "9. PWA Deployment Examples:"
echo ""

# Create deployment script
cat > deploy-pwa.sh << 'DEPLOY_EOF'
#!/bin/bash
# PWA Deployment Script

echo "🚀 Deploying PWA..."

# Generate PWA
whyml generate pwa -f pwa-manifest.yaml -o ./dist

# Generate production configuration
whyml generate caddy -f pwa-manifest.yaml -o ./Caddyfile.json --config '{
  "domain": "your-pwa.com",
  "tls_provider": "letsencrypt",
  "host": "0.0.0.0",
  "port": 80
}'

# Generate Docker configuration
whyml generate docker -f pwa-manifest.yaml -o ./docker

echo "✅ PWA deployment files ready!"
echo ""
echo "To deploy:"
echo "1. Upload files to your server"
echo "2. Configure your domain DNS"
echo "3. Run: docker-compose up -d"
echo "4. Test PWA features in browser"
DEPLOY_EOF

chmod +x deploy-pwa.sh
echo "✅ PWA deployment script created: deploy-pwa.sh"
echo ""

echo "🎉 PWA generation examples completed!"
echo ""
echo "Quick Commands Summary:"
echo "======================"
echo "# Convert to PWA:"
echo "whyml convert --from pwa-manifest.yaml --to app.html -as pwa"
echo ""
echo "# Generate complete PWA:"
echo "whyml generate pwa -f pwa-manifest.yaml -o ./pwa-output"
echo ""
echo "# Test PWA locally:"
echo "whyml run -f pwa-manifest.yaml --port 8080"
echo ""
echo "# Deploy PWA to production:"
echo "./deploy-pwa.sh"
